name: Rust Criterion Benchmarks

on:
  push:
    branches: [main]
  pull_request:
    types: [synchronize, labeled]
  workflow_dispatch:

env:
  BENCHMARKS_OUTPUT: ${{ github.workspace }}/benchmarks_output
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  RUSTFLAGS: ""

permissions:
  id-token: write
  contents: read

jobs:
  Criterion:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-benchmarks') || github.event_name == 'push' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Needed to provide cargo bench compatible output
      - name: Install cargo-criterion
        run: cargo install cargo-criterion

      - name: Download previous benchmark data
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      - name: Run benchmarks
        run: cargo criterion --output-format bencher |& tee benchmarks.txt

      - name: Compare benchmarks
        if: github.event_name == 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: benchmarks.txt
          external-data-json-path: ./cache/benchmark-data.json
          alert-threshold: "150%"
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          summary-always: true
          save-data-file: false

      - name: Compare Benchmarks and Generate Page
        if: github.event_name == 'push'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Criterion benchmarks
          tool: 'cargo'
          output-file-path: benchmarks.txt
          external-data-json-path: ./cache/benchmark-data.json
          alert-threshold: "150%"
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          summary-always: true
          save-data-file: false

name: Rust Criterion Benchmarks

on:
  push:
    branches: [main]
  pull_request:
    types: [synchronize, labeled]
  workflow_dispatch:

env:
  ACTIONS_RUNNER_DEBUG: true
  BENCHMARKS_OUTPUT: ${{ github.workspace }}/benchmarks_output
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  # The default is '-D warnings'
  RUSTFLAGS: ""

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  deployments: write
  contents: write
  pull-requests: write

jobs:
  Criterion:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-benchmarks') || github.event_name == 'push' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Needed to provide cargo bench compatible output
      - name: Install cargo-criterion
        run: cargo install cargo-criterion

      - name: Run benchmarks
        run: cargo criterion --output-format bencher |& tee benchmarks.txt

      - name: Update SHA in cache
        if: github.event_name == 'push'
        run: |
          mkdir -p cache
          echo $GITHUB_SHA > ./cache/last-sha

      - name: Compare benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name == 'push'
        with:
          tool: 'cargo'
          output-file-path: benchmarks.txt
          alert-threshold: "110%"
          fail-on-alert: ${{ github.event_name == 'pull_request' }}
          comment-on-alert: ${{ github.event.pull_request.head.repo.fork == false }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          summary-always: ${{ github.event_name == 'push' }}
          benchmark-data-dir-path: cb
          auto-push: ${{ github.event_name == 'push' }}
          save-data-file: ${{ github.event_name == 'push' }}
